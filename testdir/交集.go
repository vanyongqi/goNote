package main

import "fmt"

func main0000() {
	// str28 := []string{"10.10.11.20", "10.10.11.21", "10.10.11.22", "10.10.11.23", "10.10.11.24", "10.10.11.25", "10.10.11.26", "10.10.11.27", "10.10.11.28", "10.10.11.29", "10.10.11.30"}

	// str29 := []string{"10.10.11.22", "10.10.11.23", "10.10.11.24", "10.10.11.25", "10.10.11.26", "10.10.11.27", "10.10.11.28", "10.10.11.29", "10.10.11.30", "10.10.11.31", "10.10.11.32", "10.10.11.33", "10.10.11.34", "10.10.11.35", "10.10.11.36", "10.10.11.37", "10.10.11.38", "10.10.11.39", "10.10.11.40", "10.10.11.41", "10.10.11.42", "10.10.11.43", "10.10.11.44", "10.10.11.45", "10.10.11.46", "10.10.11.47", "10.10.11.48", "10.10.11.49", "10.10.11.50"}
	// res := Intersect(str28, str29)
	// fmt.Println(res)
	str := "10.10.10.91,10.10.10.58,"
	str = str[:len(str)-1]
	fmt.Println(str)
}

// Intersect 两个字符串数组求交集
func Intersect(slice1, slice2 []string) []string {
	m := make(map[string]bool)
	nn := make([]string, 0)
	for _, v := range slice1 {
		m[v] = true
	}

	for _, v := range slice2 {
		times, _ := m[v]
		if times == true {
			nn = append(nn, v)
		}
	}
	return nn
}
